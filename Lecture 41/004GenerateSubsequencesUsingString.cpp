/*

Given a string of length n, generate all of its subsequences.

A subsequence of a given string (sequence) is a string (sequence) that is generated by
removing zero or more characters from the given string (sequence) without changing its
order.

Example

	Input : inp[] = "abc"
	Output: ["", "c", "b", "bc", "a", "ac", "ab", "abc"]

Constraints

  1 < n < 10

*/

#include<iostream>

using namespace std;

void f(char inp[], string& out, int i) {

	// base case

	if (inp[i] == '\0') { // i == n

		cout << out << endl;
		return;

	}

	// recursive case

	// generate all the subseq for suffix of inp[] that starts at the ith index

	// or

	// take a sequence of n-i decisions for the characters in the inp[] from i to n-1

	// take a decision for inp[i]

	// option 1 : include inp[i] in the out[]

	out.push_back(inp[i]);
	f(inp, out, i + 1);

	// option 2 : exclude inp[i] from the out[]

	out.pop_back(); // backtracking
	f(inp, out, i + 1);

}

int main() {

	char inp[] = "abc";
	string out = "";

	f(inp, out, 0);

	return 0;
}
